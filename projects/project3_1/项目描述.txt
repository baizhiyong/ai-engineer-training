# 智能FAQ检索系统项目

## 项目概述
基于 Llamaindex 和 FAISS 向量数据库构建的智能FAQ检索系统，采用 RAG 架构，为用户提供高效、准确的问答服务。

## 核心功能

### 1. 智能问答检索
- **输入**：用户自然语言问题（如"如何退货？"、"配送时间多久？"）
- **输出**：最相关的FAQ条目及其详细答案
- **特性**：支持语义相似度匹配

### 2. 多轮对话支持
- 对话历史记录

### 3. 知识库管理
- 动态知识库更新
- FAQ条目的增删改查
- 批量导入导出功能
- 知识库版本管理

## 技术架构

### 核心技术栈
- **框架** Llamaindex - 用于构建复杂的对话流程
- **向量数据库**：FAISS - 高性能相似度检索
- **API框架**：FastAPI RESTful API 设计

### 系统架构
```
用户请求 → API网关 → 对话管理器 → 向量检索 → 答案生成 → 响应返回
                    ↓
                知识库管理 → FAISS索引 → FAQ数据存储
```

## API接口设计

### 1. 问答接口
- `POST /api/v1/chat` - 发送问题获取答案
- `GET /api/v1/chat/history` - 获取对话历史

### 2. 知识库管理接口
- `POST /api/v1/knowledge/faq` - 添加FAQ条目
- `PUT /api/v1/knowledge/faq/{id}` - 更新FAQ条目
- `DELETE /api/v1/knowledge/faq/{id}` - 删除FAQ条目
- `GET /api/v1/knowledge/faq` - 查询FAQ列表
- `POST /api/v1/knowledge/batch` - 批量导入FAQ

### 3. 系统管理接口
- `GET /api/v1/system/health` - 系统健康检查
- `POST /api/v1/system/rebuild-index` - 重建向量索引

## 扩展特性

### 已实现功能
-  基础问答检索
-  FAISS向量存储
-  RESTful API接口

### 计划扩展
-  多轮对话上下文过滤
-  HTTP接口知识库管理
-  用户反馈机制
-  系统监控与日志

## 部署要求
- Python 3.10+
- 内存：建议4GB以上
- 存储：根据知识库大小调整
- 网络：支持HTTP/HTTPS协议

## 使用场景
- 客服系统自动问答
- 企业内部知识库检索
- 产品帮助文档查询
- 教育培训问答系统